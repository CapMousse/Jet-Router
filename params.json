{"note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Simple package to create RESTfull app","body":"> The Jet Router package help you to create RESTfull application with named parametters and real testable url\r\n\r\n##Installation\r\n\r\nJust download the git repository and get and autoload. Or load file manually. But I realy recommand to get an autoload file (realy, it's just crazy to load all file manualy).\r\n\r\nJet/Router will be release to composer soon.\r\n\r\n##How to use\r\n\r\nBefore using this router, you need to create a `.htaccess` file to redirect all uri to your `frontController` or whatever for routing (replace `index.php` with your file) :\r\n\r\n```\r\nRewriteEngine on\r\nRewriteCond $1 !^(index\\.php|images|css|js|robots\\.txt|favicon\\.ico)\r\nRewriteCond %{REQUEST_FILENAME} !-f\r\nRewriteCond %{REQUEST_FILENAME} !-d\r\nRewriteRule ^(.*)$ ./index.php/$1 [L,QSA]\r\n```\r\n\r\nTo use this router package, you just need to create your urls :\r\n\r\n```php\r\n<?php\r\n\r\nnamespace Your\\Namespace;\r\n\r\nuse Jet\\Router\\Router;\r\n\r\n$router = new Router(array(\r\n    '/' => function(){\r\n        //Do something here on the default URL\r\n    },\r\n    'error' => function($error){\r\n        //Do something when url don't exists\r\n    },\r\n    'article/[page]:num' => '\\Your\\Namespace\\Class:method',\r\n));\r\n\r\n//Or add url via addRoutes\r\n\r\n$router->addRoutes(array(\r\n    'article/:slug/[id]:num' => function($id) {\r\n        //Do something with article ID\r\n    }\r\n));\r\n\r\n//And now, launch your router !\r\n\r\n$router->launch();\r\n```\r\n\r\n##Use patterns in routes\r\n\r\n- `:any` = allow any char in url\r\n- `:slug` = allow slugify text (this-is-a-tile-2493/dfds_fds)\r\n- `:alpha` = allow alpha char\r\n- `:num` = allow numbers\r\n\r\nAny pattern can be named and used with the same name in the asked function/method :\r\n    [name]:pattern\r\n\r\n##Usefull tips\r\nJet/Router provide some tools to detect XHR request and method type :\r\n\r\n- `Router::isXHR()` : detect is the uri is called via an XHR request\r\n- `Router::getMethod()`: the method used for the asked url\r\n\r\n\r\n#Test\r\n\r\nJust run `phpunit` or see the travis status\r\n\r\nFeel free to contribute!\r\n------------------------\r\n\r\n* Fork\r\n* Report bug\r\n* Help in development\r\n* Buy me a new mac (what ?)\r\n\r\nLicence\r\n-------\r\n\r\nReleased under a [BSD license](http://en.wikipedia.org/wiki/BSD_licenses)","name":"Jet/Router","google":""}